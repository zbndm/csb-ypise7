{"version":3,"sources":["react.png","pages/Sorting/algorithms/bublesort.js","pages/Sorting/index.js","pages/Csv/parser/csvToJson.js","pages/Csv/parser/generateCsv.js","pages/Csv/index.js","pages/ExternalScripts/algorithms/sortDates.js","pages/ExternalScripts/index.js","App.js","index.js"],"names":["module","exports","bubleSort","input","swap","n","length","sortedArray","slice","index","tmp","numbers","Array","map","Math","floor","random","App","addToast","useToasts","React","useState","sortStatus","setSortStatus","useWorker","sortWorker","sortWorkerStatus","status","killWorker","kill","console","log","className","type","disabled","onClick","result","appearance","onSortClick","WORKER_STATUS","RUNNING","then","style","color","csvToJson","csv","split","firstLine","line","reduce","curr","next","generateCsv","headers","acc","val","row","toString","substring","push","join","csvWorkerStatus","sortDates","dates","sort","dateFns","compareAsc","Date","timeout","remoteDependencies","turn","infiniteLoop","lgoo","document","querySelector","transform","useEffect","loopInterval","setInterval","clearInterval","src","logo","alt","to","path","Sorting","Csv","ExternalScripts","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.64f1cd76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react.638be909.png\";","const bubleSort = input => {\n  let swap;\n  let n = input.length - 1;\n  const sortedArray = input.slice();\n  do {\n    swap = false;\n    for (let index = 0; index < n; index += 1) {\n      if (sortedArray[index] > sortedArray[index + 1]) {\n        const tmp = sortedArray[index];\n        sortedArray[index] = sortedArray[index + 1];\n        sortedArray[index + 1] = tmp;\n        swap = true;\n      }\n    }\n    n -= 1;\n  } while (swap);\n\n  return sortedArray;\n};\n\nexport default bubleSort;\n","/* eslint-disable no-alert */\n/* eslint-disable no-console */\nimport React from \"react\";\nimport { useWorker, WORKER_STATUS } from \"@koale/useworker\";\nimport { useToasts } from \"react-toast-notifications\";\n\nimport bubleSort from \"./algorithms/bublesort\";\n\nconst numbers = [...Array(50000)].map(() =>\n  Math.floor(Math.random() * 1000000)\n);\n\nfunction App() {\n  const { addToast } = useToasts();\n\n  const [sortStatus, setSortStatus] = React.useState(false);\n  const [\n    sortWorker,\n    { status: sortWorkerStatus, kill: killWorker }\n  ] = useWorker(bubleSort);\n\n  console.log(\"WORKER:\", sortWorkerStatus);\n\n  const onSortClick = () => {\n    setSortStatus(true);\n    const result = bubleSort(numbers);\n    setSortStatus(false);\n    addToast(\"Finished: Sort\", { appearance: \"success\" });\n    console.log(\"Buble Sort\", result);\n  };\n\n  const onWorkerSortClick = () => {\n    sortWorker(numbers).then(result => {\n      console.log(\"Buble Sort useWorker()\", result);\n      addToast(\"Finished: Sort using useWorker.\", { appearance: \"success\" });\n    });\n  };\n\n  return (\n    <div>\n      <section className=\"App-section\">\n        <button\n          type=\"button\"\n          disabled={sortStatus}\n          className=\"App-button\"\n          onClick={() => onSortClick()}\n        >\n          {sortStatus ? `Loading...` : `Buble Sort`}\n        </button>\n        <button\n          type=\"button\"\n          disabled={sortWorkerStatus === WORKER_STATUS.RUNNING}\n          className=\"App-button\"\n          onClick={() => onWorkerSortClick()}\n        >\n          {sortWorkerStatus === WORKER_STATUS.RUNNING\n            ? `Loading...`\n            : `Buble Sort useWorker()`}\n        </button>\n        {sortWorkerStatus === WORKER_STATUS.RUNNING ? (\n          <button\n            type=\"button\"\n            className=\"App-button\"\n            onClick={() => killWorker()}\n          >\n            Kill Worker\n          </button>\n        ) : null}\n      </section>\n      <section className=\"App-section\">\n        <span style={{ color: \"white\" }}>\n          Open DevTools console to see the results.\n        </span>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const csvToJson = csv => {\n  const [firstLine, ...lines] = csv.split(\"\\n\");\n  return lines.map(line =>\n    firstLine.split(\",\").reduce(\n      (curr, next, index) => ({\n        ...curr,\n        [next]: line.split(\",\")[index]\n      }),\n      {}\n    )\n  );\n};\n\nexport default csvToJson;\n","const generateCsv = () => {\n  const headers =\n    \"header1,header2,header3,header4,header5,header6,header7,header8\";\n  const numbers = [...Array(50000)].map(() =>\n    Math.floor(Math.random() * 1000000)\n  );\n\n  const result = numbers.reduce((acc, val) => {\n    const row = [];\n    for (let index = 0; index < headers.split(\",\").length; index += 1) {\n      const random = Math.random()\n        .toString(36)\n        .substring(7);\n      row.push(random);\n    }\n    acc += `\\n${row.join(\",\")}`;\n    return acc;\n  }, headers);\n  return result;\n};\n\nexport default generateCsv;","/* eslint-disable no-alert */\n/* eslint-disable no-console */\nimport React from \"react\";\nimport { useWorker, WORKER_STATUS } from \"@koale/useworker\";\nimport { useToasts } from \"react-toast-notifications\";\n\nimport csvToJson from \"./parser/csvToJson\";\nimport generateCsv from \"./parser/generateCsv\";\n\nconst wip = true;\nfunction App() {\n  const { addToast } = useToasts();\n\n  const [csvStatus, setCsvStatus] = React.useState(false);\n  const [generateWorker] = useWorker(generateCsv);\n  const [csvWorker, csvWorkerStatus, killWorker] = useWorker(csvToJson);\n\n  console.log(\"WORKER:\", csvWorkerStatus);\n\n  const onCsvClick = () => {\n    const fakeCsv = generateCsv();\n    setCsvStatus(true);\n    const result = csvToJson(fakeCsv);\n    setCsvStatus(false);\n    addToast(\"Finished: Csv parsed\", { appearance: \"success\" });\n    console.log(\"Csv\", result);\n  };\n\n  const onWorkerCsvClick = async () => {\n    const fakeCsv = await generateWorker();\n    csvWorker(fakeCsv).then(result => {\n      console.log(\"Csv useWorker()\", result);\n      addToast(\"Finished: Csv parsed using useWorker()\", {\n        appearance: \"success\"\n      });\n    });\n  };\n\n  return !wip ? (\n    <div>\n      <section className=\"App-section\">\n        <button\n          type=\"button\"\n          disabled={csvStatus}\n          className=\"App-button\"\n          onClick={() => onCsvClick()}\n        >\n          {csvStatus ? `Loading...` : `Csv to Json`}\n        </button>\n        <button\n          type=\"button\"\n          disabled={csvWorkerStatus === WORKER_STATUS.RUNNING}\n          className=\"App-button\"\n          onClick={() => onWorkerCsvClick()}\n        >\n          {csvWorkerStatus === WORKER_STATUS.RUNNING\n            ? `Loading...`\n            : `Csv to Json useWorker()`}\n        </button>\n        {csvWorkerStatus === WORKER_STATUS.RUNNING ? (\n          <button\n            type=\"button\"\n            className=\"App-button\"\n            onClick={() => killWorker()}\n          >\n            Kill Worker\n          </button>\n        ) : null}\n      </section>\n      <section className=\"App-section\">\n        <span style={{ color: \"white\" }}>\n          Open DevTools console to see the results.\n        </span>\n      </section>\n    </div>\n  ): \"Csv Demo: Work in progress\";\n}\n\nexport default App;\n","const sortDates = dates => {\n  // eslint-disable-next-line no-undef\n  return dates.sort(dateFns.compareAsc);\n};\n\nexport default sortDates;\n","/* eslint-disable no-alert */\n/* eslint-disable no-console */\nimport React from \"react\";\nimport { useWorker, WORKER_STATUS } from \"@koale/useworker\";\nimport { useToasts } from \"react-toast-notifications\";\n\nimport sortDates from \"./algorithms/sortDates\";\n\nconst dates = [...Array(10000)].map(\n  () => new Date(1995, Math.floor(Math.random() * 2000), 6, 2)\n);\n\nfunction App() {\n  const { addToast } = useToasts();\n\n  const [sortStatus, setSortStatus] = React.useState(false);\n  const [\n    sortWorker,\n    { status: sortWorkerStatus, kill: killWorker }\n  ] = useWorker(sortDates, {\n    timeout: 5000,\n    remoteDependencies: [\n      \"https://cdnjs.cloudflare.com/ajax/libs/date-fns/1.30.1/date_fns.js\"\n    ]\n  });\n\n  console.log(\"WORKER:\", sortWorkerStatus);\n\n  const onSortClick = () => {\n    setSortStatus(true);\n    const result = sortDates(dates);\n    setSortStatus(false);\n    addToast(\"Finished: Sort\", { appearance: \"success\" });\n    console.log(\"Buble Sort\", result);\n  };\n\n  const onWorkerSortClick = () => {\n    sortWorker(dates).then(result => {\n      console.log(\"Buble Sort useWorker()\", result);\n      addToast(\"Finished: Sort using useWorker.\", { appearance: \"success\" });\n    });\n  };\n\n  return (\n    <div>\n      <section className=\"App-section\">\n        <button\n          type=\"button\"\n          disabled={sortStatus}\n          className=\"App-button\"\n          onClick={() => onSortClick()}\n        >\n          {sortStatus ? `Loading...` : `Sort Dates`}\n        </button>\n        <button\n          type=\"button\"\n          disabled={sortWorkerStatus === WORKER_STATUS.RUNNING}\n          className=\"App-button\"\n          onClick={() => onWorkerSortClick()}\n        >\n          {sortWorkerStatus === WORKER_STATUS.RUNNING\n            ? `Loading...`\n            : `Sort Dates useWorker()`}\n        </button>\n        {sortWorkerStatus === WORKER_STATUS.RUNNING ? (\n          <button\n            type=\"button\"\n            className=\"App-button\"\n            onClick={() => killWorker()}\n          >\n            Kill Worker\n          </button>\n        ) : null}\n      </section>\n      <section className=\"App-section\">\n        <span style={{ color: \"white\" }}>\n          Open DevTools console to see the results.\n        </span>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { ToastProvider } from \"react-toast-notifications\";\n\nimport SortingPage from \"./pages/Sorting\";\nimport CsvPage from \"./pages/Csv\";\nimport ExternalScriptsPage from \"./pages/ExternalScripts\";\nimport logo from \"./react.png\";\nimport \"./style.css\";\n\nlet turn = 0;\nfunction infiniteLoop() {\n  const lgoo = document.querySelector(\".App-logo\");\n  turn += 8;\n  lgoo.style.transform = `rotate(${turn % 360}deg)`;\n}\n\nexport default function App() {\n  React.useEffect(() => {\n    const loopInterval = setInterval(infiniteLoop, 100);\n    return () => clearInterval(loopInterval);\n  }, []);\n\n  return (\n    <ToastProvider>\n      <Router>\n        <div className=\"App\">\n          <h1 className=\"App-Title\">useWorker</h1>\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <ul>\n              <li>\n                <Link style={{ color: \"white\" }} to=\"/sorting\">\n                  Sorting Demo\n                </Link>\n              </li>\n              <li>\n                <Link style={{ color: \"white\" }} to=\"/csv\">\n                  Csv Demo\n                </Link>\n              </li>\n              <li>\n                <Link style={{ color: \"white\" }} to=\"/external\">\n                  External Scripts\n                </Link>\n              </li>\n            </ul>\n          </header>\n          <hr />\n        </div>\n        <div>\n          <Switch>\n            <Route path=\"/sorting\">\n              <SortingPage />\n            </Route>\n            <Route path=\"/csv\">\n              <CsvPage />\n            </Route>\n            <Route path=\"/external\">\n              <ExternalScriptsPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </ToastProvider>\n  );\n}\n","import \"core-js\";\nimport \"regenerator-runtime/runtime\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}